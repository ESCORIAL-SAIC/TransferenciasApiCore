// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using TransferenciasApiCore.Models.SolicitudTransferencia;
using TransferenciasApiCore.Models.Transferencia;
using TransferenciasApiCore.Models.Usuario;

namespace TransferenciasApiCore.Models;

public partial class ESCORIALContext : DbContext
{
    public ESCORIALContext(DbContextOptions<ESCORIALContext> options)
        : base(options)
    {
    }

    public virtual DbSet<deposito> Deposito { get; set; }

    public virtual DbSet<EscoSector> EscoSector { get; set; }

    public virtual DbSet<EscoTxEstado> EscoTxEstado { get; set; }

    public virtual DbSet<EscoTxEtiqueta> EscoTxEtiqueta { get; set; }

    public virtual DbSet<EscoTxItemSolicitudTransferencia> EscoTxItemSolicitudTransferencia { get; set; }

    public virtual DbSet<EscoTxItemTransferencia> EscoTxItemTransferencia { get; set; }

    public virtual DbSet<EscoTxSolicitudTransferencia> EscoTxSolicitudTransferencia { get; set; }

    public virtual DbSet<EscoTxTransferencia> EscoTxTransferencia { get; set; }

    public virtual DbSet<EscoUsuarioApp> EscoUsuarioApp { get; set; }

    public virtual DbSet<iteminventario> ItemInventario { get; set; }

    public virtual DbSet<producto> Producto { get; set; }
    
    public virtual DbSet<EscoTxConfig> EscoTxConfig { get; set; }
    

    public virtual DbSet<Unidadmedida> Unidadmedida { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .HasPostgresExtension("fuzzystrmatch")
            .HasPostgresExtension("hstore")
            .HasPostgresExtension("ltree")
            .HasPostgresExtension("pg_stat_statements")
            .HasPostgresExtension("pgstattuple")
            .HasPostgresExtension("unaccent");

        modelBuilder.Entity<deposito>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("deposito_pkey");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Activestatus).HasDefaultValue(0);
            entity.Property(e => e.Calculointerno).HasDefaultValue(false);
        });

        modelBuilder.Entity<EscoSector>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("EscoSector_pkey");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
        });

        modelBuilder.Entity<EscoTxEstado>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("EscoTxEstado_pkey");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
        });

        modelBuilder.Entity<EscoTxEtiqueta>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("EscoTxEtiqueta_pkey");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
        });
        
        modelBuilder.Entity<EscoTxConfig>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("EscoTxConfig_pkey");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
        });

        modelBuilder.Entity<EscoTxItemSolicitudTransferencia>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("EscoTxItemSolicitudTransferencia_pkey");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
        });

        modelBuilder.Entity<EscoTxItemTransferencia>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("EscoTxItemTransferencia_pkey");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
        });

        modelBuilder.Entity<EscoTxSolicitudTransferencia>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("EscoTxSolicitudTransferencia_pkey");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
        });

        modelBuilder.Entity<EscoTxTransferencia>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("EscoTxTransferencia_pkey");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
            entity.Property(e => e.UsuarioId).HasDefaultValue(0);
        });

        modelBuilder.Entity<EscoUsuarioApp>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("EscoUsuarioApp_pkey");

            entity.Property(e => e.Id).UseIdentityAlwaysColumn();
        });

        modelBuilder.Entity<iteminventario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("iteminventario_pkey");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Bultos).HasDefaultValue(0);
            entity.Property(e => e.Cantidad2Cantidad).HasDefaultValueSql("0.0");
            entity.Property(e => e.Cnolineal2Cantidad).HasDefaultValueSql("0.0");
            entity.Property(e => e.Costo2Importe).HasDefaultValueSql("0.0");
            entity.Property(e => e.CostoriImporte).HasDefaultValueSql("0.0");
            entity.Property(e => e.Lockstatusinv).HasDefaultValue(false);
            entity.Property(e => e.Peso).HasDefaultValueSql("0.0");
            entity.Property(e => e.Volumen).HasDefaultValueSql("0.0");
        });

        modelBuilder.Entity<producto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("producto_pkey");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Activestatus).HasDefaultValue(0);
            entity.Property(e => e.Alto).HasDefaultValueSql("0.0");
            entity.Property(e => e.Ancho).HasDefaultValueSql("0.0");
            entity.Property(e => e.Bienuso).HasDefaultValue(false);
            entity.Property(e => e.Calculoexinolineal).HasDefaultValue(false);
            entity.Property(e => e.Cantidad).HasDefaultValue(0);
            entity.Property(e => e.Concatcodprod).HasDefaultValue(false);
            entity.Property(e => e.Creacioncodalt).HasDefaultValue(false);
            entity.Property(e => e.Esmultiplodebultos).HasDefaultValue(false);
            entity.Property(e => e.Espesor).HasDefaultValueSql("0.0");
            entity.Property(e => e.Existenciaobligatoria).HasDefaultValue(false);
            entity.Property(e => e.Existenciaobligatorianl).HasDefaultValue(false);
            entity.Property(e => e.Explotapropiedades).HasDefaultValue(false);
            entity.Property(e => e.Explotaserieeninventario).HasDefaultValue(false);
            entity.Property(e => e.Kit).HasDefaultValue(false);
            entity.Property(e => e.Montoproducto).HasDefaultValueSql("0.0");
            entity.Property(e => e.Montototal).HasDefaultValueSql("0.0");
            entity.Property(e => e.Peso).HasDefaultValueSql("0.0");
            entity.Property(e => e.Porcentajecategoria).HasDefaultValueSql("0.0");
            entity.Property(e => e.Porcentajereposicion).HasDefaultValueSql("0.0");
            entity.Property(e => e.Puntopedido).HasDefaultValueSql("0.0");
            entity.Property(e => e.Stockmaximo).HasDefaultValueSql("0.0");
            entity.Property(e => e.Stockminimo).HasDefaultValueSql("0.0");
            entity.Property(e => e.Stockoptimo).HasDefaultValueSql("0.0");
            entity.Property(e => e.Stockseguridad).HasDefaultValueSql("0.0");
            entity.Property(e => e.Unidadesporbulto).HasDefaultValueSql("0.0");
            entity.Property(e => e.Unidminimcomer).HasDefaultValueSql("0.0");
            entity.Property(e => e.Utilcnltotalitem).HasDefaultValue(false);
            entity.Property(e => e.Utilizacantidadnolineal).HasDefaultValue(false);
            entity.Property(e => e.Utilizaseriedetallada).HasDefaultValue(false);
            entity.Property(e => e.Volumen).HasDefaultValueSql("0.0");
        });

        modelBuilder.Entity<Unidadmedida>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("unidadmedida_pkey");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Activestatus).HasDefaultValue(0);
            entity.Property(e => e.Redondeahaciaarribaapartir).HasDefaultValueSql("0.0");
            entity.Property(e => e.Unidadminima).HasDefaultValueSql("0.0");
        });
        modelBuilder.HasSequence("aux_suceso_inc_seq");
        modelBuilder.HasSequence("hibernate_sequence", "web");

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}